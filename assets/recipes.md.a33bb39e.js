import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.22c2e13e.js";
const __pageData = '{"title":"Recipes","description":"","frontmatter":{},"headers":[{"level":2,"title":"Cross-tab Communication","slug":"cross-tab-communication"}],"relativePath":"recipes.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="recipes" tabindex="-1">Recipes <a class="header-anchor" href="#recipes" aria-hidden="true">#</a></h1><h2 id="cross-tab-communication" tabindex="-1">Cross-tab Communication <a class="header-anchor" href="#cross-tab-communication" aria-hidden="true">#</a></h2><p>You can send a message to another tab/window using <code>chrome.runtime.sendMessage</code> and <code>init</code>.</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&lt;</span>IPluginBase <span class="token operator">&amp;</span> IPlugin<span class="token operator">&gt;</span><span class="token punctuation">{</span>\n    <span class="token operator">...</span>PluginBase<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">{</span>\n        niceName<span class="token operator">:</span> <span class="token string">&#39;Spotify&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// since we have a global command, init will be run on every page,</span>\n            <span class="token comment">// but we don&#39;t want this listener on non-spotify pages</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>spotifyPlayerUrlRegexMatch<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                chrome<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span>onMessage<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;lsSpotify&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">switch</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>control<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token keyword">case</span> SpotifyControlButtons<span class="token punctuation">.</span>Play<span class="token operator">:</span> <span class="token punctuation">{</span>\n                                <span class="token function">clickButton</span><span class="token punctuation">(</span>SpotifyControlButtons<span class="token punctuation">.</span>Play<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                                <span class="token keyword">break</span><span class="token punctuation">;</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n        commands<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                name<span class="token operator">:</span> <span class="token string">&#39;spotify play&#39;</span><span class="token punctuation">,</span>\n                description<span class="token operator">:</span> <span class="token string">&#39;Play the Spotify web player.&#39;</span><span class="token punctuation">,</span>\n                global<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                match<span class="token operator">:</span> <span class="token string">&#39;spotify play&#39;</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">const</span> control <span class="token operator">=</span> SpotifyControlButtons<span class="token punctuation">.</span>Play<span class="token punctuation">;</span> \n                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span>resolve <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                        chrome<span class="token punctuation">.</span>tabs<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span>url<span class="token operator">:</span> spotifyPlayerUrlMatch<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>tabs<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                            <span class="token keyword">const</span> tab <span class="token operator">=</span> tabs<span class="token punctuation">.</span>length <span class="token operator">?</span> tabs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n                            <span class="token keyword">if</span> <span class="token punctuation">(</span>tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                                chrome<span class="token punctuation">.</span>tabs<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>tab<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token punctuation">{</span>type<span class="token operator">:</span> <span class="token string">&#39;lsSpotify&#39;</span><span class="token punctuation">,</span> control<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>keywords: talking with another tab, inactive tab, message passing</p>', 5);
const _hoisted_6 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_6);
}
var recipes = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, recipes as default };
