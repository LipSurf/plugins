import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.22c2e13e.js";
const __pageData = '{"title":"Overview","description":"","frontmatter":{},"headers":[{"level":3,"title":"What are you talking about?","slug":"what-are-you-talking-about"},{"level":3,"title":"Features","slug":"features"},{"level":3,"title":"Quick Complete Example Plugin","slug":"quick-complete-example-plugin"}],"relativePath":"index.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h1><p><em><a href="https://www.lipsurf.com" target="_blank" rel="noopener noreferrer">LipSurf</a> plugins are like <a href="https://en.wikipedia.org/wiki/Userscript" target="_blank" rel="noopener noreferrer">UserScripts</a> (eg. GreaseMonkey et al.) for voice.</em></p><p>Firstly, <em><strong>prohst</strong></em> to you! By nature of being on this page, I can tell you have exquisite taste for software!</p><p>If you were looking for the user manual, <a href="https://help.lipsurf.com" target="_blank" rel="noopener noreferrer">see here</a>.</p><h3 id="what-are-you-talking-about" tabindex="-1">What are you talking about? <a class="header-anchor" href="#what-are-you-talking-about" aria-hidden="true">#</a></h3><p><a href="https://chrome.google.com/webstore/detail/lipsurf/lnnmjmalakahagblkkcnjkoaihlfglon" target="_blank" rel="noopener noreferrer">LipSurf</a> is a Google Chrome extension that enables users to browse with their voice \u2014 augmenting the mouse/keyboard paradigm, enabling hands-free productivity. This serves many purposes:</p><ul><li>Using the computer while your hands are dirty or busy (eating, cleaning etc.)</li><li>Enabling those with physical impairments or those wishing to prevent repetitive strain injury (<a href="https://www.nhs.uk/conditions/repetitive-strain-injury-rsi/" target="_blank" rel="noopener noreferrer">RSI</a>) of the hands</li><li>Creating quick shortcuts for complex motions (eg. <span class="voice-cmd">compose mail to John</span> can open up a prefilled email message on Gmail faster than traditional browser navigation)</li><li>Enabling one to be far from the computer keyboard/mouse (eg. media center PCs)</li></ul><h3 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h3><ul><li>Extensible architecture</li><li>Simple, declarative plugins</li><li>Command chaining</li><li>Supports <a href="/langs.html">100+ languages</a></li><li>Testing is built-in</li></ul><h3 id="quick-complete-example-plugin" tabindex="-1">Quick Complete Example Plugin <a class="header-anchor" href="#quick-complete-example-plugin" aria-hidden="true">#</a></h3><p>Writing your own plugins for LipSurf is <em>pleasurably</em> straightforward.</p><div class="language-ts"><pre><code><span class="token comment">/// &lt;reference types=&quot;@lipsurf/types/extension&quot;/&gt;</span>\n<span class="token keyword">declare</span> <span class="token keyword">const</span> PluginBase<span class="token operator">:</span> IPluginBase<span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&lt;</span>IPluginBase <span class="token operator">&amp;</span> IPlugin<span class="token operator">&gt;</span><span class="token punctuation">{</span>\n  <span class="token operator">...</span>PluginBase<span class="token punctuation">,</span>\n  <span class="token operator">...</span><span class="token punctuation">{</span>\n    niceName<span class="token operator">:</span> <span class="token string">&quot;Gmail&quot;</span><span class="token punctuation">,</span>\n    match<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https:\\/\\/mail\\.google\\.com</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    version<span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>\n    apiVersion<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    commands<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&quot;Compose Mail&quot;</span><span class="token punctuation">,</span>\n        description<span class="token operator">:</span> <span class="token string">&quot;Open the new email composition form in Gmail.&quot;</span><span class="token punctuation">,</span>\n        global<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        match<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;compose mail&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;write new mail&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">pageFn</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&quot;https://mail.google.com/mail/?view=cm&amp;fs=1&quot;</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div>', 12);
const _hoisted_13 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_13);
}
var index = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, index as default };
